var ReactRouter = window.ReactRouter
var Router = ReactRouter.Router
var Route = ReactRouter.Route
var Link = ReactRouter.Link
var Redirect = ReactRouter.Redirect
var hashHistory = ReactRouter.hashHistory
var IndexRoute = ReactRouter.IndexRoute


var TransformComponent = React.createClass({
	
	addValueToList: function(map, key, value) {
    //if the list is already created for the "key", then uses it
    //else creates new list for the "key" to store multiple values in it.
    map[key] = map[key] || [];
    map[key].push(value);
	},
	
	 render: function() {  
		var data =  this.props.data;
		var map = {};
		var testSets = [];
		var totalPassed = 0;
		var totalSkipped = 0;
		var totalFailed = 0;
		
		var dataLength = data.length;
		for (var i = 0; i < dataLength; i++) {
			var run = data[i];
					
			switch (run.status) {
			  case "PASS":
				totalPassed++;
				break;
			  case "FAIL":
				totalFailed++;
				break;
			  case "SKIP":
				totalSkipped++;
				break;
			  default:
				console.log("Invalid status");
			}
				
			this.addValueToList(map, run.testSet, run);
			
			if(!testSets.includes(run.testSet)){
				testSets.push(run.testSet);
			}
		}
		return (<Main map={map} testSets={testSets} pass={totalPassed} fail={totalFailed} skip={totalSkipped}/>)
	 }
  });


var Main = React.createClass( {
  getInitialState: function () {
    return {
      activeIndex: 0
    };
  },
  testSetSelectCallBack: function ( index ) {
    this.setState( {
      activeIndex: index
    } );
  },
  render: function () {

    return (
    <div>
      <div className="page-header">
        <h3>Execution report</h3>
        <div className="centered-text">
          <a className="ui green tag label big"> { this.props.pass } </a>
          <a className="ui red tag label big"> { this.props.fail } </a>
          <a className="ui yellow tag label big"> { this.props.skip } </a>
        </div>
      </div>
      <br></br>
      <div className="row">
        <div className="col-md-4">
          <h3>Test Sets</h3>
          <TestSetsBlock
                         testSets={ this.props.testSets }
                         map={ this.props.map }
                         itemSelect={ this.testSetSelectCallBack } />
        </div>
        <div className="col-md-8">
          <TestCasesBlock testCases={ this.props.map[ this.props.testSets[ this.state.activeIndex ] ] } />
        </div>
      </div>
    </div>
    )
  }
} );  




var FiltersAndStats = React.createClass({
	onButtonClick: function(event) {
		console.log("inside on button click");
		console.log(event.currentTarget.dataset.id);
		this.props.onStatusFilterChange(event.currentTarget.dataset.id);
	},
	
	handleChange: function(event) {
		this.props.onTextFilterChange(event.target.value);
	},
	
	 render: function() {
	var testCases = this.props.testCases;
	
	var passed = 0;
	var skipped = 0;
	var failed = 0;
	
	testCases.forEach(function(testCase) {
	switch (testCase.status) {
	  case "PASS":
		passed++;
		break;
	  case "FAIL":
		failed++;
		break;
	  case "SKIP":
		skipped++;
		break;
	  default:
		console.log("Invalid status");
	}
	});
	
	var all = passed + failed + skipped;
	var passPer = passed/all*100;
	var failPer = failed/all*100;
	var skipPer = skipped/all*100;
	
	return(<div>
		<div className="btn-group">
            <button  className="btn btn-success" data-id="PASS" onClick={ this.onButtonClick }>Passed</button>
            <button  className="btn btn-danger" data-id="FAIL" onClick={ this.onButtonClick }>Failed</button>
            <button  className="btn btn-warning" data-id="SKIP" onClick={ this.onButtonClick }>Skipped</button>
			<button  className="btn btn-info" data-id="ALL" onClick={ this.onButtonClick}>All</button>
          </div>
          <div className="form-group">
            <label>Filter</label>
            <input type="text" className="form-control" onChange={this.handleChange}></input>
          </div>
		  
		  <h4 className="stats-title">Statistics</h4>
		
		<label>
		<span className="pull-right">{passPer + ' % (' + passed + ')'}</span>PASS</label>
		<div className="progress progress-xxs">
		<div className="progress-bar progress-bar-success" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style={{width : passPer + '%'}}></div>
		</div>
		
		<label>
		<span className="pull-right">{failPer + ' % (' + failed + ')'}</span>FAIL</label>
		<div className="progress progress-xxs">
		<div className="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style={{width : failPer + '%'}}></div>
		</div>
		
		<label>
		<span className="pull-right">{skipPer + ' % (' + skipped + ')'}</span>SKIP</label>
		<div className="progress progress-xxs">
		<div className="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style={{width : skipPer + '%'}}></div>
		</div>
		</div>
	 );
	 }
  });



var TestCase = React.createClass({
	 render: function() {
		return(
		<div className="row">
            <div className="col-md-10">
              <p>{this.props.testCase.testCase}</p>
            </div>
            <div className="col-md-2">
              <p>{this.props.testCase.status}</p>
            </div>
          </div>
	 );
	 }
  });



var TestCasesBlock = React.createClass( {
	 getInitialState: function(){
		console.log("inside init state");
		return {statusFilter: "ALL", textFilter: ''};
		
	},
	
	onStatusFilterChangeCallback: function(statusFilter){
		
		console.log(statusFilter);
		this.setState( { statusFilter: statusFilter } );	
	},
	
	onTextFilterChangeCallback: function(textFilter){

		this.setState( { textFilter: textFilter } );	
	},
	
	fuzzy_match: function(str,pattern){
    pattern = pattern.split("").reduce(function(a,b){ return a+'[^'+b+']*'+b; });
    return (new RegExp(pattern, 'i')).test(str);
	},
	
  render: function () {
	  var testCases = this.props.testCases;
	  var statusFiltered = [];
	  var finalFiltered = [];
	  

	  var statusFilter = this.state.statusFilter;
	  var textFilter = this.state.textFilter;
	  
	  // filter by status
	  if(statusFilter != 'ALL'){
		  testCases.forEach(function(testCase) {
			  if(testCase.status == statusFilter)
				  statusFiltered.push(testCase);
		});
		  
	  }
	  else statusFiltered = testCases;
	  
	  
	  if(textFilter.length > 2){
		  for (var i = 0; i < statusFiltered.length; i++) {
		  if(this.fuzzy_match(statusFiltered[i].testCase, textFilter))
			  finalFiltered.push(statusFiltered[i]);
		}	 
	  }
	  else finalFiltered = statusFiltered;
	
	  console.log(finalFiltered);
	  // filter by text
	  
    if ( finalFiltered ) {
      var toRender = finalFiltered.map( function ( testCase, index ) {
        return (
        <TestCase testCase={ testCase } key={ index } />
        );
      }, this );
    }
	
	    return (<div>
	      <h3>Test Cases Block</h3>
		  <FiltersAndStats testCases={this.props.testCases} onStatusFilterChange={this.onStatusFilterChangeCallback} onTextFilterChange={this.onTextFilterChangeCallback}/>

		{ toRender }
         </div>);
  }
} );


var TestSetsBlock = React.createClass( {
  getInitialState: function () {
    return {
      selectedItem: -1
    };
  },
  onItemClick: function ( event ) {
    this.setState( {
      selectedItem: event.currentTarget.dataset.id
    } );
    this.props.itemSelect( event.currentTarget.dataset.id );
  },
  render: function () {
    var testSets = this.props.testSets;
    if ( testSets ) {
      var toRender = testSets.map( function ( testSet, index ) {
        var style_cl = "list-group-item ";
        style_cl += this.state.selectedItem == index ? "on" : "off";

        return (
        <li
            className={ style_cl }
            onClick={ this.onItemClick }
            data-id={ index }
            key={ index }>
          <span className="badge">{ this.props.map[ testSet ].length }</span>
          { testSet }
        </li>
        );
      }, this );
    }

    return (<ul className="list-group">
              { toRender }
            </ul>);
  }
} );





var data = [{
	testCase: "Verify balance",
	iteration: 1,
	testSet: "Test set 1",
	status: "PASS",
		
	steps: [
	{
		message: "Message 1",
		timestamp: "123455",
		logger : "Logger 1"
	},
	{
		message: "Message 1",
		timestamp: "2334",
		logger : "Logger 2"
	},
	{
		message: "Message 3",
		timestamp: "1234556",
		logger : "Logger 3"
	}
	]
},

{
	testCase: "Test case 2",
	iteration: 1,
	testSet: "Test set 1",
	status: "FAIL",
		
	steps: [
	{
		message: "Message 1",
		timestamp: "123455",
		logger : "Logger 1"
	},
	{
		message: "Message 1",
		timestamp: "2334",
		logger : "Logger 2"
	},
	{
		message: "Message 3",
		timestamp: "1234556",
		logger : "Logger 3"
	}
	]
},


{
	testCase: "Test case 3",
	iteration: 1,
	testSet: "Test set 3",
	status: "PASS",
		
	steps: [
	{
		message: "Message 1",
		timestamp: "123455",
		logger : "Logger 1"
	},
	{
		message: "Message 1",
		timestamp: "2334",
		logger : "Logger 2"
	},
	{
		message: "Message 3",
		timestamp: "1234556",
		logger : "Logger 3"
	}
	]
},

{
	testCase: "Test case 4",
	iteration: 1,
	testSet: "Test set 3",
	status: "PASS",
		
	steps: [
	{
		message: "Message 1",
		timestamp: "123455",
		logger : "Logger 1"
	},
	{
		message: "Message 1",
		timestamp: "2334",
		logger : "Logger 2"
	},
	{
		message: "Message 3",
		timestamp: "1234556",
		logger : "Logger 3"
	}
	]
}
];

var TransformComponentWrapper = React.createClass({
  render: function () {
    return (
        <TransformComponent data={data} />
    );
  }
});

var AllTestCasesWrapper = React.createClass({
  render: function () {
    return (
        <TestCasesBlock testCases={data} />
    );
  }
});



var About = React.createClass({
	 render: function() {
		 console.log('inside about render');
		return(
		<div>
		<p>Some test on About page</p>
		</div>
	 );
	 }
  });


ReactDOM.render(
  <Router history={hashHistory}>
    <Route path="/" component={TransformComponentWrapper}></Route>
    <Route path="/all" component={AllTestCasesWrapper}></Route>    
  </Router>,
 
  document.getElementById('App')
);




<!DOCTYPE html>
<html lang="en">
  
  <head>
    <meta charset="utf-8">
    <title>
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <link href="https://maxcdn.bootstrapcdn.com/bootswatch/3.3.7/flatly/bootstrap.min.css" rel="stylesheet">
	
	<link rel="stylesheet" href="styles.css" />
  </head>
  
  <body>
		<nav class="navbar navbar-inverse">
		  <div class="container-fluid">
			<div class="navbar-header">
			  <a class="navbar-brand" href="#">Execution Report</a>
			</div>
			<ul class="nav navbar-nav">
			  <li class="active"><a href="#">Home</a></li>
			  <li><a href="#all">All Tests</a></li>
			  <li><a href="#">Summary</a></li> 
			</ul>
		  </div>
		</nav>
      
		 <div class="container">
			 <div id="App"> 
			</div>
		</div>
	
	
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <script src="build/react.js"></script>
    <script src="build/react-dom.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js"></script>
	<script src="https://npmcdn.com/react-router@2.8.1/umd/ReactRouter.min.js"></script>
    <script type="text/babel" src="build/script-react.js"></script>

  </body>

</html>
	
	
	
	
	



.centered-text {
    text-align:center
}

li.on {
	background-color: lightblue;
}

li.off {
	
}


label {
    display: block;
}
.stats-title{
    font-size: 20px;
    text-transform: uppercase;
    border-bottom: 1px solid #f0f0f0;
    margin-bottom: 30px;
    padding: 10px 0;
}
.progress.progress-xxs {
    height: 3px;
}

.ui.label{display:inline-block;line-height:1;vertical-align:baseline;margin:0 .14285714em;background-color:#E8E8E8;background-image:none;padding:.5833em .833em;color:rgba(0,0,0,.6);text-transform:none;font-weight:700;border:0 solid transparent;border-radius:.28571429rem;-webkit-transition:background .1s ease;transition:background .1s ease}.ui.label:first-child{margin-left:0}.ui.label:last-child{margin-right:0}a.ui.label{cursor:pointer}.ui.label>a{cursor:pointer;color:inherit;opacity:.5;-webkit-transition:.1s opacity ease;transition:.1s opacity ease}.ui.label>a:hover{opacity:1}.ui.label>img{width:auto!important;vertical-align:middle;height:2.1666em!important}.ui.label>.icon{width:auto;margin:0 .75em 0 0}.ui.label>.detail{display:inline-block;vertical-align:top;font-weight:700;margin-left:1em;opacity:.8}.ui.label>.detail .icon{margin:0 .25em 0 0}.ui.label>.close.icon,.ui.label>.delete.icon{cursor:pointer;margin-right:0;margin-left:.5em;font-size:.92857143em;opacity:.5;-webkit-transition:background .1s ease;transition:background .1s ease}.ui.label>.delete.icon:hover{opacity:1}.ui.labels>.label{margin:0 .5em .5em 0}.ui.header>.ui.label{margin-top:-.29165em}.ui.attached.segment>.ui.top.left.attached.label,.ui.bottom.attached.segment>.ui.top.left.attached.label{border-top-left-radius:0}.ui.attached.segment>.ui.top.right.attached.label,.ui.bottom.attached.segment>.ui.top.right.attached.label{border-top-right-radius:0}.ui.top.attached.segment>.ui.bottom.left.attached.label{border-bottom-left-radius:0}.ui.top.attached.segment>.ui.bottom.right.attached.label{border-bottom-right-radius:0}.ui.top.attached.label+[class*="right floated"]+*,.ui.top.attached.label:first-child+:not(.attached){margin-top:2rem!important}.ui.bottom.attached.label:first-child~:last-child:not(.attached){margin-top:0;margin-bottom:2rem!important}.ui.image.label{width:auto!important;margin-top:0;margin-bottom:0;max-width:9999px;vertical-align:baseline;text-transform:none;background:#E8E8E8;padding:.5833em .833em .5833em .5em;border-radius:.28571429rem;box-shadow:none}.ui.image.label img{display:inline-block;vertical-align:top;height:2.1666em;margin:-.5833em .5em -.5833em -.5em;border-radius:.28571429rem 0 0 .28571429rem}.ui.image.label .detail{background:rgba(0,0,0,.1);margin:-.5833em -.833em -.5833em .5em;padding:.5833em .833em;border-radius:0 .28571429rem .28571429rem 0}.ui.tag.label,.ui.tag.labels .label{margin-left:1em;position:relative;padding-left:1.5em;padding-right:1.5em;border-radius:0 .28571429rem .28571429rem 0;-webkit-transition:none;transition:none}.ui.tag.label:before,.ui.tag.labels .label:before{position:absolute;-webkit-transform:translateY(-50%) translateX(50%) rotate(-45deg);-ms-transform:translateY(-50%) translateX(50%) rotate(-45deg);transform:translateY(-50%) translateX(50%) rotate(-45deg);top:50%;right:100%;content:'';background-color:inherit;background-image:none;width:1.56em;height:1.56em;-webkit-transition:none;transition:none}.ui.tag.label:after,.ui.tag.labels .label:after{position:absolute;content:'';top:50%;left:-.25em;margin-top:-.25em;background-color:#FFF!important;width:.5em;height:.5em;box-shadow:0 -1px 1px 0 rgba(0,0,0,.3);border-radius:500rem}.ui.corner.label{position:absolute;top:0;right:0;margin:0;padding:0;text-align:center;border-color:#E8E8E8;width:4em;height:4em;z-index:1;-webkit-transition:border-color .1s ease;transition:border-color .1s ease;background-color:transparent!important}.ui.corner.label:after{position:absolute;content:"";right:0;top:0;z-index:-1;width:0;height:0;background-color:transparent!important;border-top:0 solid transparent;border-right:4em solid transparent;border-bottom:4em solid transparent;border-left:0 solid transparent;border-right-color:inherit;-webkit-transition:border-color .1s ease;transition:border-color .1s ease}.ui.corner.label .icon{cursor:default;position:relative;top:.64285714em;left:.78571429em;font-size:1.14285714em;margin:0}.ui.left.corner.label,.ui.left.corner.label:after{right:auto;left:0}.ui.left.corner.label:after{border-top:4em solid transparent;border-right:4em solid transparent;border-bottom:0 solid transparent;border-left:0 solid transparent;border-top-color:inherit}.ui.left.corner.label .icon{left:-.78571429em}.ui.segment>.ui.corner.label{top:-1px;right:-1px}.ui.segment>.ui.left.corner.label{right:auto;left:-1px}.ui.ribbon.label{position:relative;margin:0;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;border-radius:0 .28571429rem .28571429rem 0;border-color:rgba(0,0,0,.15)}.ui.ribbon.label:after{position:absolute;content:'';top:100%;left:0;background-color:transparent!important;border-style:solid;border-width:0 1.2em 1.2em 0;border-color:transparent;border-right-color:inherit;width:0;height:0}.ui.ribbon.label{left:calc(-1rem - 1.2em);margin-right:-1.2em;padding-left:calc(1rem + 1.2em);padding-right:1.2em}.ui[class*="right ribbon"].label{left:calc(100% + 1rem + 1.2em);padding-left:1.2em;padding-right:calc(1rem + 1.2em);text-align:left;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);border-radius:.28571429rem 0 0 .28571429rem}.ui[class*="right ribbon"].label:after{left:auto;right:0;border-style:solid;border-width:1.2em 1.2em 0 0;border-color:transparent;border-top-color:inherit}.ui.card .image>.ribbon.label,.ui.image>.ribbon.label{position:absolute;top:1rem}.ui.card .image>.ui.ribbon.label,.ui.image>.ui.ribbon.label{left:calc(.05rem - 1.2em)}.ui.card .image>.ui[class*="right ribbon"].label,.ui.image>.ui[class*="right ribbon"].label{left:calc(100% + -.05rem + 1.2em);padding-left:.833em}.ui.table td>.ui.ribbon.label{left:calc(-.78571429em - 1.2em)}.ui.table td>.ui[class*="right ribbon"].label{left:calc(100% + .78571429em + 1.2em);padding-left:.833em}.ui.attached.label,.ui[class*="top attached"].label{width:100%;position:absolute;margin:0;top:0;left:0;padding:.75em 1em;border-radius:.21428571rem .21428571rem 0 0}.ui[class*="bottom attached"].label{top:auto;bottom:0;border-radius:0 0 .21428571rem .21428571rem}.ui[class*="top left attached"].label{width:auto;margin-top:0!important;border-radius:.21428571rem 0 .28571429rem}.ui[class*="top right attached"].label{width:auto;left:auto;right:0;border-radius:0 .21428571rem 0 .28571429rem}.ui[class*="bottom left attached"].label{width:auto;top:auto;bottom:0;border-radius:0 .28571429rem 0 .21428571rem}.ui[class*="bottom right attached"].label{top:auto;bottom:0;left:auto;right:0;width:auto;border-radius:.28571429rem 0 .21428571rem}.ui.label.disabled{opacity:.5}a.ui.label:hover,a.ui.labels .label:hover{background-color:#E0E0E0;border-color:#E0E0E0;background-image:none;color:rgba(0,0,0,.8)}.ui.labels a.label:hover:before,a.ui.label:hover:before{color:rgba(0,0,0,.8)}.ui.active.label{background-color:#D0D0D0;border-color:#D0D0D0;background-image:none;color:rgba(0,0,0,.95)}.ui.active.label:before{background-color:#D0D0D0;background-image:none;color:rgba(0,0,0,.95)}a.ui.active.label:hover,a.ui.labels .active.label:hover{background-color:#C8C8C8;border-color:#C8C8C8;background-image:none;color:rgba(0,0,0,.95)}.ui.labels a.active.label:ActiveHover:before,a.ui.active.label:ActiveHover:before{background-color:#C8C8C8;background-image:none;color:rgba(0,0,0,.95)}.ui.label.visible:not(.dropdown),.ui.labels.visible .label{display:inline-block!important}.ui.label.hidden,.ui.labels.hidden .label{display:none!important}.ui.red.label,.ui.red.labels .label{background-color:#DB2828!important;border-color:#DB2828!important;color:#FFF!important}.ui.red.labels .label:hover,a.ui.red.label:hover{background-color:#d01919!important;border-color:#d01919!important;color:#FFF!important}.ui.red.corner.label,.ui.red.corner.label:hover{background-color:transparent!important}.ui.red.ribbon.label{border-color:#b21e1e!important}.ui.basic.red.label{background-color:#FFF!important;color:#DB2828!important;border-color:#DB2828!important}.ui.basic.red.labels a.label:hover,a.ui.basic.red.label:hover{background-color:#FFF!important;color:#d01919!important;border-color:#d01919!important}.ui.orange.label,.ui.orange.labels .label{background-color:#F2711C!important;border-color:#F2711C!important;color:#FFF!important}.ui.orange.labels .label:hover,a.ui.orange.label:hover{background-color:#f26202!important;border-color:#f26202!important;color:#FFF!important}.ui.orange.corner.label,.ui.orange.corner.label:hover{background-color:transparent!important}.ui.orange.ribbon.label{border-color:#cf590c!important}.ui.basic.orange.label{background-color:#FFF!important;color:#F2711C!important;border-color:#F2711C!important}.ui.basic.orange.labels a.label:hover,a.ui.basic.orange.label:hover{background-color:#FFF!important;color:#f26202!important;border-color:#f26202!important}.ui.yellow.label,.ui.yellow.labels .label{background-color:#FBBD08!important;border-color:#FBBD08!important;color:#FFF!important}.ui.yellow.labels .label:hover,a.ui.yellow.label:hover{background-color:#eaae00!important;border-color:#eaae00!important;color:#FFF!important}.ui.yellow.corner.label,.ui.yellow.corner.label:hover{background-color:transparent!important}.ui.yellow.ribbon.label{border-color:#cd9903!important}.ui.basic.yellow.label{background-color:#FFF!important;color:#FBBD08!important;border-color:#FBBD08!important}.ui.basic.yellow.labels a.label:hover,a.ui.basic.yellow.label:hover{background-color:#FFF!important;color:#eaae00!important;border-color:#eaae00!important}.ui.olive.label,.ui.olive.labels .label{background-color:#B5CC18!important;border-color:#B5CC18!important;color:#FFF!important}.ui.olive.labels .label:hover,a.ui.olive.label:hover{background-color:#a7bd0d!important;border-color:#a7bd0d!important;color:#FFF!important}.ui.olive.corner.label,.ui.olive.corner.label:hover{background-color:transparent!important}.ui.olive.ribbon.label{border-color:#198f35!important}.ui.basic.olive.label{background-color:#FFF!important;color:#B5CC18!important;border-color:#B5CC18!important}.ui.basic.olive.labels a.label:hover,a.ui.basic.olive.label:hover{background-color:#FFF!important;color:#a7bd0d!important;border-color:#a7bd0d!important}.ui.green.label,.ui.green.labels .label{background-color:#21BA45!important;border-color:#21BA45!important;color:#FFF!important}.ui.green.labels .label:hover,a.ui.green.label:hover{background-color:#16ab39!important;border-color:#16ab39!important;color:#FFF!important}.ui.green.corner.label,.ui.green.corner.label:hover{background-color:transparent!important}.ui.green.ribbon.label{border-color:#198f35!important}.ui.basic.green.label{background-color:#FFF!important;color:#21BA45!important;border-color:#21BA45!important}.ui.basic.green.labels a.label:hover,a.ui.basic.green.label:hover{background-color:#FFF!important;color:#16ab39!important;border-color:#16ab39!important}.ui.teal.label,.ui.teal.labels .label{background-color:#00B5AD!important;border-color:#00B5AD!important;color:#FFF!important}.ui.teal.labels .label:hover,a.ui.teal.label:hover{background-color:#009c95!important;border-color:#009c95!important;color:#FFF!important}.ui.teal.corner.label,.ui.teal.corner.label:hover{background-color:transparent!important}.ui.teal.ribbon.label{border-color:#00827c!important}.ui.basic.teal.label{background-color:#FFF!important;color:#00B5AD!important;border-color:#00B5AD!important}.ui.basic.teal.labels a.label:hover,a.ui.basic.teal.label:hover{background-color:#FFF!important;color:#009c95!important;border-color:#009c95!important}.ui.blue.label,.ui.blue.labels .label{background-color:#2185D0!important;border-color:#2185D0!important;color:#FFF!important}.ui.blue.labels .label:hover,a.ui.blue.label:hover{background-color:#1678c2!important;border-color:#1678c2!important;color:#FFF!important}.ui.blue.corner.label,.ui.blue.corner.label:hover{background-color:transparent!important}.ui.blue.ribbon.label{border-color:#1a69a4!important}.ui.basic.blue.label{background-color:#FFF!important;color:#2185D0!important;border-color:#2185D0!important}.ui.basic.blue.labels a.label:hover,a.ui.basic.blue.label:hover{background-color:#FFF!important;color:#1678c2!important;border-color:#1678c2!important}.ui.violet.label,.ui.violet.labels .label{background-color:#6435C9!important;border-color:#6435C9!important;color:#FFF!important}.ui.violet.labels .label:hover,a.ui.violet.label:hover{background-color:#5829bb!important;border-color:#5829bb!important;color:#FFF!important}.ui.violet.corner.label,.ui.violet.corner.label:hover{background-color:transparent!important}.ui.violet.ribbon.label{border-color:#502aa1!important}.ui.basic.violet.label{background-color:#FFF!important;color:#6435C9!important;border-color:#6435C9!important}.ui.basic.violet.labels a.label:hover,a.ui.basic.violet.label:hover{background-color:#FFF!important;color:#5829bb!important;border-color:#5829bb!important}.ui.purple.label,.ui.purple.labels .label{background-color:#A333C8!important;border-color:#A333C8!important;color:#FFF!important}.ui.purple.labels .label:hover,a.ui.purple.label:hover{background-color:#9627ba!important;border-color:#9627ba!important;color:#FFF!important}.ui.purple.corner.label,.ui.purple.corner.label:hover{background-color:transparent!important}.ui.purple.ribbon.label{border-color:#82299f!important}.ui.basic.purple.label{background-color:#FFF!important;color:#A333C8!important;border-color:#A333C8!important}.ui.basic.purple.labels a.label:hover,a.ui.basic.purple.label:hover{background-color:#FFF!important;color:#9627ba!important;border-color:#9627ba!important}.ui.pink.label,.ui.pink.labels .label{background-color:#E03997!important;border-color:#E03997!important;color:#FFF!important}.ui.pink.labels .label:hover,a.ui.pink.label:hover{background-color:#e61a8d!important;border-color:#e61a8d!important;color:#FFF!important}.ui.pink.corner.label,.ui.pink.corner.label:hover{background-color:transparent!important}.ui.pink.ribbon.label{border-color:#c71f7e!important}.ui.basic.pink.label{background-color:#FFF!important;color:#E03997!important;border-color:#E03997!important}.ui.basic.pink.labels a.label:hover,a.ui.basic.pink.label:hover{background-color:#FFF!important;color:#e61a8d!important;border-color:#e61a8d!important}.ui.brown.label,.ui.brown.labels .label{background-color:#A5673F!important;border-color:#A5673F!important;color:#FFF!important}.ui.brown.labels .label:hover,a.ui.brown.label:hover{background-color:#975b33!important;border-color:#975b33!important;color:#FFF!important}.ui.brown.corner.label,.ui.brown.corner.label:hover{background-color:transparent!important}.ui.brown.ribbon.label{border-color:#805031!important}.ui.basic.brown.label{background-color:#FFF!important;color:#A5673F!important;border-color:#A5673F!important}.ui.basic.brown.labels a.label:hover,a.ui.basic.brown.label:hover{background-color:#FFF!important;color:#975b33!important;border-color:#975b33!important}.ui.grey.label,.ui.grey.labels .label{background-color:#767676!important;border-color:#767676!important;color:#FFF!important}.ui.grey.labels .label:hover,a.ui.grey.label:hover{background-color:#838383!important;border-color:#838383!important;color:#FFF!important}.ui.grey.corner.label,.ui.grey.corner.label:hover{background-color:transparent!important}.ui.grey.ribbon.label{border-color:#805031!important}.ui.basic.grey.label{background-color:#FFF!important;color:#767676!important;border-color:#767676!important}.ui.basic.grey.labels a.label:hover,a.ui.basic.grey.label:hover{background-color:#FFF!important;color:#838383!important;border-color:#838383!important}.ui.black.label,.ui.black.labels .label{background-color:#1B1C1D!important;border-color:#1B1C1D!important;color:#FFF!important}.ui.black.labels .label:hover,a.ui.black.label:hover{background-color:#27292a!important;border-color:#27292a!important;color:#FFF!important}.ui.black.corner.label,.ui.black.corner.label:hover{background-color:transparent!important}.ui.black.ribbon.label{border-color:#805031!important}.ui.basic.black.label{background-color:#FFF!important;color:#1B1C1D!important;border-color:#1B1C1D!important}.ui.basic.black.labels a.label:hover,a.ui.basic.black.label:hover{background-color:#FFF!important;color:#27292a!important;border-color:#27292a!important}.ui.basic.label{background:#FFF;border:1px solid rgba(34,36,38,.15);color:rgba(0,0,0,.87);box-shadow:none}a.ui.basic.label:hover{text-decoration:none;background:#FFF;color:#1e70bf;box-shadow:1px solid rgba(34,36,38,.15);box-shadow:none}.ui.basic.pointing.label:before{border-color:inherit}.ui.fluid.labels>.label,.ui.label.fluid{width:100%;box-sizing:border-box}.ui.inverted.label,.ui.inverted.labels .label{color:rgba(255,255,255,.9)!important}.ui.horizontal.label,.ui.horizontal.labels .label{margin:0 .5em 0 0;padding:.4em .833em;min-width:3em;text-align:center}.ui.circular.label,.ui.circular.labels .label{min-width:2em;min-height:2em;padding:.5em!important;line-height:1em;text-align:center;border-radius:500rem}.ui.empty.circular.label,.ui.empty.circular.labels .label{min-width:0;min-height:0;overflow:hidden;width:.5em;height:.5em;vertical-align:baseline}.ui.pointing.label{position:relative}.ui.attached.pointing.label{position:absolute}.ui.pointing.label:before{background-color:inherit;border-style:solid;border-color:inherit;position:absolute;content:'';-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);background-image:none;z-index:2;width:.6666em;height:.6666em;-webkit-transition:background .1s ease;transition:background .1s ease}.ui.pointing.label,.ui[class*="pointing above"].label{margin-top:1em}.ui.pointing.label:before,.ui[class*="pointing above"].label:before{border-width:1px 0 0 1px;-webkit-transform:translateX(-50%) translateY(-50%) rotate(45deg);-ms-transform:translateX(-50%) translateY(-50%) rotate(45deg);transform:translateX(-50%) translateY(-50%) rotate(45deg);top:0;left:50%}.ui[class*="bottom pointing"].label,.ui[class*="pointing below"].label{margin-top:0;margin-bottom:1em}.ui[class*="bottom pointing"].label:before,.ui[class*="pointing below"].label:before{border-width:0 1px 1px 0;right:auto;-webkit-transform:translateX(-50%) translateY(-50%) rotate(45deg);-ms-transform:translateX(-50%) translateY(-50%) rotate(45deg);transform:translateX(-50%) translateY(-50%) rotate(45deg);top:100%;left:50%}.ui[class*="left pointing"].label{margin-top:0;margin-left:.6666em}.ui[class*="left pointing"].label:before{border-width:0 0 1px 1px;-webkit-transform:translateX(-50%) translateY(-50%) rotate(45deg);-ms-transform:translateX(-50%) translateY(-50%) rotate(45deg);transform:translateX(-50%) translateY(-50%) rotate(45deg);bottom:auto;right:auto;top:50%;left:0}.ui[class*="right pointing"].label{margin-top:0;margin-right:.6666em}.ui[class*="right pointing"].label:before{border-width:1px 1px 0 0;-webkit-transform:translateX(50%) translateY(-50%) rotate(45deg);-ms-transform:translateX(50%) translateY(-50%) rotate(45deg);transform:translateX(50%) translateY(-50%) rotate(45deg);top:50%;right:0;bottom:auto;left:auto}.ui.basic.pointing.label:before,.ui.basic[class*="pointing above"].label:before{margin-top:-1px}.ui.basic[class*="bottom pointing"].label:before,.ui.basic[class*="pointing below"].label:before{bottom:auto;top:100%;margin-top:1px}.ui.basic[class*="left pointing"].label:before{top:50%;left:-1px}.ui.basic[class*="right pointing"].label:before{top:50%;right:-1px}.ui.floating.label{position:absolute;z-index:100;top:-1em;left:100%;margin:0 0 0 -1.5em!important}.ui.mini.label,.ui.mini.labels .label{font-size:.64285714rem}.ui.tiny.label,.ui.tiny.labels .label{font-size:.71428571rem}.ui.small.label,.ui.small.labels .label{font-size:.78571429rem}.ui.label,.ui.labels .label{font-size:.85714286rem}.ui.large.label,.ui.large.labels .label{font-size:1rem}.ui.big.label,.ui.big.labels .label{font-size:1.28571429rem}.ui.huge.label,.ui.huge.labels .label{font-size:1.42857143rem}.ui.massive.label,.ui.massive.labels .label{font-size:1.71428571rem}



