
http://cx-oracle.readthedocs.io/en/latest/installation.html#quick-start-cx-oracle-installation

https://stackoverflow.com/questions/15034151/copy-directory-contents-into-a-directory-with-python
https://code.google.com/archive/p/robotframework-seleniumlibrary/wikis/UseSeleniumGRIDwithRobotFramework.wiki
http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#extended-variable-syntax


@echo off
python -m andrei-lib.AndreiClass
pause

================================================================================================
https://github.com/boakley/robotframework-workbench/wiki/Getting-started
1. python -m rwb.debugger
2. pybot --listener rwb.socket_listener:8910 Test.robot
================================================================================================

1. No normal ide support
2. Robot framework syntax is very bad - no normal loops, while loops,
	if block cannot have several statements and so on
3. Test will stop on the first	failed assertion
	
4. No normal debugger
5. Libraries created for it and the number of answers on SO and web - tells its not widely used
6. No built-in support for parallel execution
7. Limited possibilities to change the framework
8. Standard report can have some problems (if a lot of tests will be executed)

https://stackoverflow.com/questions/22241420/execution-of-python-code-with-m-option-or-not

  
  read abount virtual env
  
  execute command: python -m site --user-site
  also look at requirements.txt
  
  https://python-packaging.readthedocs.io/en/latest/minimal.html
    -- look here for example https://github.com/franz-see/Robotframework-Database-Library/blob/master/setup.py
	-- https://github.com/kennethreitz/setup.py
  
  
  https://stackoverflow.com/questions/16196268/where-should-i-put-my-own-python-module-so-that-it-can-be-imported
  
  


====================================================================================================================================
import re

if __name__ == '__main__':

    with open('D:/RobotframeworkRelated/robot.txt', 'r') as f:
        content = f.read()
        # matches = re.findall(r'\*\*\* .*? \*\*\*.*', content, re.DOTALL | re.MULTILINE)

        matches = re.split(r'(\*\*\* .*? \*\*\*.*?\r?\n)', content, re.DOTALL | re.MULTILINE)

        if matches[0] == '':
            matches = matches[1:]

        tc_index = -1
        for ind in range(len(matches)):
            if re.match(r'\*\*\* Test Cases \*\*\*', matches[ind]):
                tc_index = ind + 1

        print tc_index

        tests = re.split(r'\r?\n(?=\S+?\s)', matches[tc_index])

        for t in tests:
            tname = re.search()

        print  tests

        # with open('write.txt', 'w') as wr:
        #     for m in matches:
        #         wr.write(m)

==============================================================================================================================
https://stackoverflow.com/questions/17546016/how-can-you-zip-or-unzip-from-the-script-using-only-windows-built-in-capabiliti
https://stackoverflow.com/questions/1855095/how-to-create-a-zip-archive-of-a-directory

Search it - Example: Exclude tests by name


try:
    with open('my_settings.dat') as file:
        pass
except IOError as e:
    print "Unable to open file" #Does not exist OR no read permissions



For the first point, the mode argument in open() can include a '+' character which will cause the file to be created if it doesn't exist. If the directory itself doesn't exist then you'll see a FileNotFoundException. This can be handled as such:

try:
  f = open(log_file, 'a+')   # use 'a+' to append, 'w+' to truncate
except FileNotFoundException:
  # handle the file system issues


need to lower the maxIdleTime = 10
or

use instead of maxIdleTime these 2 ( https://stackoverflow.com/questions/24565274/c3p0-maxidletime-is-same-as-wait-timeout-of-mysql?rq=1)

need to use idleConnectionTestPeriod =  sets a limit to how long a connection will stay idle before testing it. 
and maxIdleTimeExcessConnections = it will bring back the connectionCount back down to minPoolSize after a spike in activity



https://stackoverflow.com/questions/23568409/xlrd-python-reading-excel-file-into-dict-with-for-loops
https://stackoverflow.com/questions/15476983/deserialize-a-json-string-to-an-object-in-python

from xlrd import open_workbook

book = open_workbook('D:/Doc.xlsx')

print ('Number of sheets ')
print book.nsheets

sheet = book.sheet_by_index(0)

dict_list = []

for sheet_index in xrange(book.nsheets):
    sheet = book.sheet_by_index(sheet_index)

    sheet.cell(0, 0).

    # read header values into the list
    keys = [sheet.cell(0, col_index).value for col_index in xrange(sheet.ncols)]

    for row_index in xrange(1, sheet.nrows):
        #d = {keys[col_index]: sheet.cell(row_index, col_index).value
        #     for col_index in xrange(sheet.ncols)}
        d = {}
        for col_index in xrange(sheet.ncols):
            d[keys[col_index]] = sheet.cell(row_index, col_index).value
        dict_list.append(d)

print dict_list

====================================================================================================================



 Instant instant1 = Instant.ofEpochMilli(1426349294842L);
		 Instant instant2 = Instant.ofEpochMilli(1426359294842L);
		 
		 System.out.println(ChronoUnit.HOURS.between(instant1, instant2));


https://forums.asp.net/t/2027451.aspx?How+to+get+file+name+selected+in+input+type+file+  - get filename of input file
https://saucelabs.com/resources/articles/best-practices-tips-selenium-file-upload - file upload
https://stackoverflow.com/questions/44738502/downloading-a-excel-file-on-selenium-grid-and-reading-it
https://stackoverflow.com/questions/47068912/how-to-download-a-file-using-the-remote-selenium-webdriver

https://www.mkyong.com/java/how-to-read-and-parse-csv-file-in-java/
https://www.linkedin.com/pulse/selenium-grid-file-downloads-cloud-balaji-chandrasegaran/


// start the proxy
    BrowserMobProxy proxy = new BrowserMobProxyServer();
    proxy.start(0);

// add the response filter to download the file
    proxy.addResponseFilter(new ResponseFilter() {
    @Override
    public void filterResponse(HttpResponse response, HttpMessageContents contents, HttpMessageInfo messageInfo) {
            //filter based on header
            if (response.headers.contains("Content-Disposition")/*...some filtering criteria...*/) {
                 //get the contents & filename from the response     
                 byte[] content = contents.getBinaryContents();
                 String filename= response.headers().get("Content-Disposition").replace("attachment; filename=","").replace("\"","");
                 //set Your download location below 
                 filePath=downloadPathFile+File.separator+filename;
                // write the content to to the filepath 
                //TBD
            }
        }
    });

    // get the Selenium proxy object
    Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);

    // configure it as a desired capability
    DesiredCapabilities capabilities = new DesiredCapabilities();
    capabilities.setCapability(CapabilityType.PROXY, seleniumProxy);

    // start the browser up
    WebDriver driver = new FirefoxDriver(capabilities);

https://github.com/groupon/Selenium-Grid-Extras/blob/master/SeleniumGridExtras/src/main/java/com/groupon/seleniumgridextras/OS.java

package pdf;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDDocumentCatalog;
import org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;
import org.apache.pdfbox.pdmodel.interactive.form.PDField;
import org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField;

public class FormsReader {
	public void test() throws IOException {
		PDDocument pdfDocument = PDDocument.load(new File("D:/form2.pdf"));
		PDDocumentCatalog docCatalog = pdfDocument.getDocumentCatalog();
		PDAcroForm acroForm = docCatalog.getAcroForm();

		System.out.println(acroForm.getField("topmostSubform[0].Page1[0].f_1[0]").getValueAsString());

		List<PDField> fields = acroForm.getFields();
		for (PDField field : fields) {
			list(field);
		}

	}

	void list(PDField field) {
		System.out.println(field.getFullyQualifiedName());
		System.out.println(field.getPartialName());

		if (field instanceof PDNonTerminalField) {
			PDNonTerminalField nonTerminalField = (PDNonTerminalField) field;
			for (PDField child : nonTerminalField.getChildren()) {
				list(child);
			}
		}
	}

	public static void main(String[] args) throws IOException {
		FormsReader formsReader = new FormsReader();
		formsReader.test();
	}

}



Options spreads that does the opposite of crediting your account with cash instead are known as "Credit Spreads". 
This means that you need to pay cash to put on a debit spread while you will actually receive cash for putting on a credit spread. 

Assuming QQQ is trading at $61, its Mar $61 call options are trading at $0.60 and its Mar $62 Calls are trading at $0.20. 

Instead of buying only the Mar $61 call options for $0.60, you could sell to open an equal amount of Mar $62 Calls for $0.20 in order to bring the net debit of the position down to $0.40. 

so, net Debit = long position premium - short position premium
Bull Call Spread = $0.60 - $0.20 = $0.40 debit spread

===========================================================================================================================
UPDATE

I thought I'd update this to show how you'd actually use this in practice.
Update your local repo from the remote (but don't merge):

git fetch
After downloading the updates, let's see the differences:

git diff master origin/master
If you're happy with those updates, then merge:

git pull
===========================================================================================================================	
	
		
	WITH CommentTree
(comment_id, bug_id, parent_id, author, comment, depth)
AS (
SELECT *, 0 AS depth FROM Comments
WHERE parent_id IS NULL
Report erratum
this copy is (P1.0 printing, May 2010)
SOLUTION: USE ALTERNATIVE TREE MODELS 41
UNION ALL
SELECT c.*, ct.depth+1 AS depth FROM CommentTree ct
JOIN Comments c ON (ct.comment_id = c.parent_id)
)
SELECT * FROM CommentTree WHERE bug_id = 1234;

===========================================================================================================================


--Sql Server 2014 Express Edition
--Batches are separated by 'go'

select @@version as 'sql server version'

CREATE TABLE Comments
( comment_id INT PRIMARY KEY,
  parent_id INT,
  context VARCHAR(50) NOT NULL
  
);
go

INSERT INTO Comments VALUES (1, NULL, 'First Comment');
INSERT INTO Comments VALUES (2, 1, 'Second Comment');
INSERT INTO Comments VALUES (3, 2 ,'Third Comment');
INSERT INTO Comments VALUES (4, 1, 'Forth Comment');

go


SELECT c1.*, c2.*, c3.*
FROM Comments c1 -- 1st level
LEFT OUTER JOIN Comments c2
ON c2.parent_id = c1.comment_id -- 2nd level
LEFT OUTER JOIN Comments c3
ON c3.parent_id = c2.comment_id

go

===========================================================================================================================


--Sql Server 2014 Express Edition
--Batches are separated by 'go'

select @@version as 'sql server version'

CREATE TABLE Directories
( dir_id INT PRIMARY KEY,
  parent_id INT,
  name VARCHAR(8000) NOT NULL
  
);
go

INSERT INTO Directories VALUES (1, NULL, 'Root');
INSERT INTO Directories VALUES (2, 1, 'Second Dir');
INSERT INTO Directories VALUES (3, 2 ,'Third Dir');
INSERT INTO Directories VALUES (4, 1, 'Forth Dir');

go


WITH DirTree
(dir_id, parent_id, name, depth, path)
AS (
SELECT *, 0 AS depth, name as path FROM Directories
WHERE parent_id IS NULL
UNION ALL
SELECT d.*, dt.depth+1 AS depth,  CAST(dt.path + '/' + d.name AS VARCHAR(8000)) FROM DirTree dt
JOIN Directories d ON (dt.dir_id = d.parent_id)
)
select * from DirTree

go

===========================================================================================================================

also https://stackoverflow.com/questions/764497/flatten-adjacency-list-hierarchy-to-a-list-of-all-paths

	
	private static final List<String> inProcess = new ArrayList<>();
	
	
	/*if (Holder.get(user == null)) { // null or expired
		if(checkInProcessAndWaitOrTake == true){
				
			try {
				// perform auth operation
				
				Holder.put(user);

			}
			finally {
				removeFromInProcessAndNotifyAll();
			}	
		}
		else {
			Holder.take(user);
		}
	}*/

	public boolean checkInProcessAndWait(String user) throws InterruptedException {

		synchronized (inProcess) {

			int index = inProcess.indexOf(user);
			if (index != -1) {
				inProcess.get(index).wait(); // wait for another thread
				return false;
			} else
				inProcess.add(user); // I will take care of it
			return true;
		}
	}

	public void addToInProcess(String user) {

		synchronized (inProcess) {
			inProcess.add(user);
		}
	}

	public void removeFromInProcessAndNotifyAll(String user) {

		synchronized (inProcess) {
			int index = inProcess.indexOf(user);
			inProcess.get(index).notifyAll();
			inProcess.remove(index);
		}
	}


===========================================================================================================================

\d{1,3}(,\d{3})*
^([1-9]\d{0,2}|0)([,]\d{3})*$

http://websystique.com/spring-boot/spring-boot-rest-api-example/

public class Tester {
	public static void main(String[] args) {

		LocalDateTime ofInstant = LocalDateTime.ofInstant(Instant.now(), ZoneId.of("America/New_York")); // ZoneId.of(ZoneId.SHORT_IDS.get("EST")));
		System.out.println(ofInstant);

		DateTimeFormatter pattern = DateTimeFormatter.ofPattern("'Some time' yyyy-MM-dd h-mm-ss a");

		LocalDateTime parse = LocalDateTime.parse("Some time 2017-04-16 8-25-46 AM", pattern); // AM/PM
																								// should
																								// be
																								// upper
		System.out.println(parse);

		// Duration.between(ofInstant, parse).

		System.out.println(ChronoUnit.MINUTES.between(parse, ofInstant));
		System.out.println(Duration.between(parse, ofInstant).getSeconds());

		
		System.out.println(Instant.now().toEpochMilli());
		System.out.println(ZonedDateTime.of(LocalDateTime.now(), ZoneId.of("America/New_York")).toInstant().toEpochMilli());  // time in future
		
		
	}
}


===========================================================================================================================
	
	// with SimpleDateFormat
		// 1. if we don't specify time it will be 00:00:00
		// 2. if we don't specify date it will be Jan 01 1970
		
		String date = "1:45 PM";
		
		SimpleDateFormat simple = new SimpleDateFormat("h:mm a");
		System.out.println(simple.parse(date));
		
		
		DateTimeFormatter form = DateTimeFormatter.ofPattern("h:mm a");
		//LocalDateTime dateTime = LocalDateTime.parse(date, form);
		
		LocalTime localTime = LocalTime.parse(date, form);	
		System.out.println(localTime);
		
		String date2 = "2:24p";
		date2 = date2.replace("p", " PM").replace("a", " AM");
		localTime = LocalTime.parse(date2, form);	
		System.out.println(localTime);
		
		LocalDateTime finalDate = LocalDateTime.of(LocalDate.now(), localTime);
		System.out.println(finalDate);
		
		LocalDateTime plusDays = finalDate.plusDays(2);
		System.out.println(finalDate.compareTo(plusDays));
		
		
		
		// ==================================
		String original = "2017/02/15";
		DateTimeFormatter newOne = DateTimeFormatter.ofPattern("yyyy/MM/dd");
		LocalDate newDate = LocalDate.parse(original, newOne);
		System.out.println(newDate);
		
		SimpleDateFormat newSimple = new SimpleDateFormat("yyyy/MM/dd");
		System.out.println(newSimple.parse(original));
		
		
		//LocalDateTime time = LocalDate.parse("2017/02/15", newOne).atStartOfDay();
		
		
		// ==================================
		Calendar cal = new GregorianCalendar();
		
		date = date + " " + cal.get(Calendar.YEAR) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.DAY_OF_MONTH);
		System.out.println(date);
		System.out.println(new SimpleDateFormat("h:mm a yyyy/MM/dd").parse(date));




===========================================================================================================================

http://www.baeldung.com/jackson-serialize-enums



public static void main(String[] args) throws IOException {
		/*
		 * Collection files = FileUtils.listFiles(new File("D:\\abc"), new
		 * RegexFileFilter("^(.*?)"), DirectoryFileFilter.DIRECTORY);
		 * 
		 * System.out.println(files.toString()); for (Object file : files) {
		 * File fileObj = (File) file;
		 * System.out.println(fileObj.getCanonicalPath());
		 * System.out.println(fileObj.getName()); }
		 */

		List<String> files = printFnames("D:\\abc", new ArrayList<String>());

		for (String string : files) {
			System.out.println(string);

		}

	}


Scripts are kept in /etc/init.d, and links to them are made in the directories 
/etc/rc0.d, /etc/rc1.d, and so on
The /etc/inittabfile tells initwhat to do at each run level.

Red Hat supplies a chkconfigcommand to help you manage services. This command adds or removes startup scripts from the system, manages the run levels at 
which they operate, and lists the run levels for which a script is currently configured. See the man page for usage information for this simple and handy tool.



https://gist.github.com/miglen/5590986
http://www.davidghedini.com/pg/entry/install_tomcat_7_on_centos


https://mprabhat.me/2012/07/02/creating-a-fix-initiator-using-quickfixj/
http://kavy.iteye.com/blog/2242463
https://github.com/quickfix-j/quickfixj/blob/master/quickfixj-examples/banzai/src/main/resources/quickfix/examples/banzai/banzai.cfg


https://maven.apache.org/guides/introduction/introduction-to-repositories.html
Build a project and copy the jar - in Tomcat webapps dir/localMavenRepository (keeping the folder structure)

add this code to the dependent project pom.xml


<repositories> 	<repository>  <id>repository</id> <url>http://localhost:8080/localMavenRepository</url> </repository> </repositories>



//-------------------Retrieve All Users--------------------------------------------------------
	
	@RequestMapping(value = "/users", method = RequestMethod.GET)
	public ResponseEntity<List<User>> listAllUsers() {
		List<User> users = userService.findAllUsers();
		if(users.isEmpty()){
			return new ResponseEntity<List<User>>(HttpStatus.NO_CONTENT);//You many decide to return HttpStatus.NOT_FOUND
		}
		return new ResponseEntity<List<User>>(users, HttpStatus.OK);
	}
	
	
	http://ricostacruz.com/cheatsheets/sh.html#ifs
	
	
	
	

Управлять прокси-сервером можно напрямую через Java интерфейс или через REST API. В этой статье мы будем рассматривать только интересующий нас Java интерфейс. Для того, чтобы подключить BrowserMob в проект нужно скачать библиотеку и добавить ее в проект, либо добавить соответствующую зависимость в pom.xml, если вы используете Maven:

<dependency>
    <groupId>net.lightbody.bmp</groupId>
    <artifactId>browsermob-proxy</artifactId>
    <version>2.0-beta-8</version>
    <scope>test</scope>
</dependency>
Если у Вас уже имеется подключенная в проект библиотека Selenium, то лучше исключить использование Selenium API, встроенного в BrowserMob. Но при этом учитывайте возможные несоответствия версий Selemium и BrowserMob:

<dependency>
    <groupId>net.lightbody.bmp</groupId>
    <artifactId>browsermob-proxy</artifactId>
    <version>2.0-beta-8</version>
    <scope>test</scope>
    <exclusions>
        <exclusion>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
        </exclusion>
    </exclusions>
</dependency>







BrowserMob Proxy

При использовании basic аутентификации имя пользователя и пароль включаются в состав веб-запроса в стандартный HTTP заголовок «Authorization». Из этого можно заключить, что для успешного прохождения авторизации достаточно изменить HTTP заголовок перед отправкой на сервер. Сам Selenium не умеет манипулировать отправляемыми запросами, но для этих целей отлично подойдет прокси-сервер, в частности BrowserMob Proxy в силу простоты его подключения. Об интеграции и использовании BrowserMob с Selenium WebDriver можно почитать в предыдущей статье. В случае basic авторизации net.lightbody.bmp.proxy.ProxyServer предоставляет метод для ее автоматического выполнения:

server.autoBasicAuthorization("example.com", "username", "password"); 
Важно то, что первый аргумент autoBasicAuthorization это не URL, а именно доменное имя. Он не должен содержать http:// или других частей URL. Для того, чтобы использовать учетные данные для любого домена нужно оставить первый параметр пустым.

server.autoBasicAuthorization("", "username", "password"); 
Пример автоматической basic-аутентификации с BrowserMob Proxy:

import net.lightbody.bmp.proxy.ProxyServer;
 
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Proxy;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
 
public class ProxyServerBasicAutorizationTest {
 
    private ProxyServer server;
    private WebDriver driver;
 
    @Before
    public void startProxy() throws Exception {
        server = new ProxyServer(4444);
        server.start();
        server.autoBasicAuthorization("", "username", "password");
        Proxy proxy = server.seleniumProxy();
 
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability(CapabilityType.PROXY, proxy);
 
        driver = new FirefoxDriver(capabilities);
    }
 
    @Test
    public void testAccessProtectedSite() throws Exception {
        driver.get("https://example.com");
        driver.findElement(By.className("sign-out"));
    }
 
    @After
    public void stopProxyServer() throws Exception {
        driver.quit();
        server.stop();
    }
}
И напоследок ложка дегтя, BrowserMob Proxy работает только с basic-аутентификацией и не предоставляет методов для работы с другими протоколами (Kerberos, NTLM и др.).
